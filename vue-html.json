{
	// Place your snippets for vue-html here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print to console": {
		"prefix": "vueComponent",
		"body": [
			"<!-- $1 -->",
			"<template>",
			"<div class='$2'>$5</div>",
			"</template>",
			"",
			"<script>",
			"",
			"export default {",
			"data() {",
			"//这⾥存放数据",
			"return {",
			"",
			"};",
			"},",
			"//监听属性类似于data概念",
			"computed: {},",
			"//监控data中的数据变化",
			"watch: {},",
			"//⽅法集合",
			"methods: {",
			"",
			"},",
			"//⽣命周期 - 创建完成（可以访问当前this实例）",
			"created() {",
			"",
			"},",
			"//⽣命周期 - 挂载完成（可以访问DOM元素）",
			"mounted() {",
			"",
			"},",
			"//beforeCreate() {}, //⽣命周期 - 创建之前",
			"//beforeMount() {}, //⽣命周期 - 挂载之前",
			"//beforeUpdate() {}, //⽣命周期 - 更新之前",
			"//updated() {}, //⽣命周期 - 更新之后",
			"//beforeDestroy() {}, //⽣命周期 - 销毁之前",
			"//destroyed() {}, //⽣命周期 - 销毁完成",
			"//activated() {}, //如果页⾯有keep-alive缓存功能，这个函数会触发",
			"}",
			"</script>",
			"<style scoped>",
			"@import url($3); /*引用公共css类*/",
			"$4",
			"</style>"
		],
		"description": "Log output to console"
	}
}